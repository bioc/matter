
import("methods")

import("biglm")

importFrom("digest",
	"digest")

importFrom("irlba",
	"irlba")

importFrom("Matrix",
	"nnzero",
	"rowSums",
	"rowMeans",
	"colSums",
	"colMeans")

importFrom("stats",
	"approx",
	"cov",
	"coef",
	"fitted",
	"resid",
	"loadings",
	"dnorm",
	"fft",
	"median",
	"nextn",
	"loess",
	"lowess",
	"na.omit",
	"nobs",
	"optim",
	"predict",
	"qnorm",
	"rlnorm",
	"rnorm",
	"runmed",
	"setNames",
	"smooth.spline",
	"spline",
	"update")

importFrom("stats4",
	"plot",
	"update",
	"summary")

import("BiocParallel")

import("BiocGenerics")

import("ProtGenerics")

importFrom("utils",
	"head",
	"tail",
	"object.size")

importFrom("grDevices",
	"dev.cur",
	"dev.flush",
	"dev.hold",
	"hcl.colors",
	"palette.colors",
	"xy.coords")

importFrom("graphics",
	"Axis",
	"box",
	"co.intervals",
	"grid",
	"legend",
	"mtext",
	"par",
	"plot.new",
	"plot.window",
	"plot.xy",
	"strheight",
	"strwidth",
	"title")

exportClasses(
	"drle",
	"drle_fct",
	"atoms",
	"matter",
	"matter_arr",
	"matter_mat",
	"matter_vec",
	"matter_list",
	"matter_str",
	"matter_fct",
	"sparse_arr",
	"sparse_mat",
	"sparse_vec")

export(
	"drle",
	"is.drle")

export(
	"atoms",
	"read_atom",
	"write_atom",
	"read_atoms",
	"write_atoms")

export(
	"matter",
	"is.matter",
	"as.matter",
	"matter_arr",
	"matter_mat",
	"matter_vec",
	"matter_fct",
	"matter_list",
	"matter_str",
	"struct")

export(
	"is.sparse",
	"as.sparse",
	"sparse_mat",
	"sparse_vec")

exportMethods(
	"as.altrep",
	"as.vector",
	"as.matrix",
	"as.array",
	"as.list",
	"as.factor",
	"as.data.frame")

exportMethods(
	"adata",
	"atomdata",
	"atomdata<-",
	"type",
	"type<-",
	"path",
	"path<-",
	"readonly",
	"readonly<-",
	"chunksize",
	"chunksize<-")

exportMethods(
	"aindex",
	"atomindex",
	"atomindex<-",
	"pointers",
	"pointers<-",
	"domain",
	"domain<-",
	"tolerance",
	"tolerance<-",
	"sampler",
	"sampler<-",
	"nnzero")

exportMethods(
	"keys",
	"keys<-",
	"paths",
	"paths<-",
	"datamode",
	"datamode<-",
	"filemode",
	"filemode<-",
	"combiner",
	"combiner<-")

exportMethods("checksum")

exportMethods(
	"describe_for_display",
	"preview_for_display")

exportMethods(
	"%*%",
	"[",
	"[<-",
	"$",
	"$<-",
	"c",
	"combine",
	"cbind2",
	"rbind2",
	"lengths",
	"length",
	"dims",
	"dim",
	"dim<-",
	"names",
	"names<-",
	"dimnames",
	"dimnames<-",
	"levels",
	"levels<-",
	"Encoding",
	"Encoding<-",
	"t",
	"crossprod",
	"tcrossprod")

S3method("cbind", "matter_arr")
S3method("rbind", "matter_arr")
S3method("cbind", "sparse_arr")
S3method("rbind", "sparse_arr")

exportMethods(
	"Arith",
	"Compare",
	"Logic")

exportMethods(
	"range",
	"min",
	"max",
	"prod",
	"sum",
	"mean",
	"var",
	"sd",
	"any",
	"all",
	"rowSums",
	"rowMeans",
	"colSums",
	"colMeans")

exportMethods(
	"rowVars",
	"rowSds",
	"colVars",
	"colSds")

export(
	"s_range",
	"s_min",
	"s_max",
	"s_prod",
	"s_sum",
	"s_mean",
	"s_var",
	"s_sd",
	"s_any",
	"s_all",
	"s_nnzero",
	"s_colstats",
	"s_rowstats",
	"stat_c")

export(
	"colstreamStats",
	"rowstreamStats")

S3method("c", "stream_stat")
S3method("cbind", "stream_stat")
S3method("rbind", "stream_stat")
S3method("print", "stream_stat")
S3method("nobs", "stream_stat")
S3method("[", "stream_stat")
S3method("[[", "stream_stat")

S3method("stat_c", "stream_range")
S3method("stat_c", "stream_min")
S3method("stat_c", "stream_max")
S3method("stat_c", "stream_prod")
S3method("stat_c", "stream_sum")
S3method("stat_c", "stream_mean")
S3method("stat_c", "stream_var")
S3method("stat_c", "stream_sd")
S3method("stat_c", "stream_any")
S3method("stat_c", "stream_all")
S3method("stat_c", "stream_nnzero")

S3method("as.data.frame", "stream_stat")

exportMethods(
	"rowsweep",
	"colsweep",
	"rowscale",
	"colscale")

exportMethods(
	"rowStats",
	"colStats")

export(
	".rowStats",
	".colStats")

export("pinv")

export(
	"nndsvd",
	"nnmf_als",
	"nnmf_mult",
	"prcomp_lanczos",
	"pls_nipals",
	"pls_kernel",
	"opls_nipals")

S3method("predict", "nnmf")
S3method("print", "nnmf")

S3method("predict", "pls")
S3method("print", "pls")

S3method("predict", "opls")
S3method("print", "opls")

export(
	"chunk_apply",
	"chunk_rowapply",
	"chunk_colapply",
	"chunk_lapply",
	"chunk_mapply")

export(
	"chunkApply",
	"chunkLapply",
	"chunkMapply")

export(
	"uuid",
	"hex2raw",
	"raw2hex")

S3method("[", "size_bytes")
S3method("print", "size_bytes")
S3method("format", "size_bytes")

export(
	"sizeof",
	"vm_used")

export(
	"approx1",
	"filt1_ma",
	"filt1_conv",
	"filt1_gauss",
	"filt1_bi",
	"filt1_adapt",
	"filt1_diff",
	"filt1_guide",
	"filt1_pag",
	"filt1_sg",
	"warp1_loc",
	"warp1_dtw",
	"warp1_cow",
	"icor",
	"binvec",
	"rollvec",
	"findbins",
	"downsample",
	"locmax",
	"locmin",
	"estbase_loc",
	"estbase_hull",
	"estbase_snip",
	"estbase_med",
	"estnoise_sd",
	"estnoise_mad",
	"estnoise_diff",
	"estnoise_quant",
	"estnoise_filt",
	"findpeaks",
	"findpeaks_cwt",
	"findridges",
	"ricker",
	"cwt",
	"peakwidths",
	"peakareas",
	"binpeaks",
	"mergepeaks",
	"estres",
	"simspec",
	"simspec1")

export(
	"approx2",
	"filt2_ma",
	"filt2_conv",
	"filt2_gauss",
	"filt2_bi",
	"filt2_adapt",
	"filt2_diff",
	"filt2_guide",
	"warp2_trans",
	"mi",
	"enhance_hist",
	"enhance_adapt",
	"trans2d")

export(
	"inpoly",
	"rowdist",
	"coldist",
	"rowdist_at",
	"coldist_at")

export(
	"roll",
	"seq_rel",
	"shingles",
	"dpal",
	"cpal")

exportMethods(
	"apply",
	"lapply",
	"sapply")

exportMethods("scale")

exportMethods("prcomp")

exportMethods("bigglm")

export(
	"qrank",
	"qorder",
	"qselect",
	"qmedian",
	"qmad",
	"reldiff",
	"asearch",
	"bsearch",
	"kdtree",
	"kdsearch",
	"knnsearch")

S3method("print", "kdtree")

export(
	"vizi",
	"set_channel",
	"set_coord",
	"add_mark",
	"add_facets",
	"plot_facets")

export(
	"vizi_par",
	"vizi_style")

S3method("preplot", "vizi_plot")
S3method("preplot", "vizi_facets")
S3method("plot", "vizi_plot")
S3method("plot", "vizi_facets")
S3method("plot", "vizi_key")
S3method("plot", "vizi_colorkey")

S3method("plot", "vizi_points")
S3method("plot", "vizi_lines")
S3method("plot", "vizi_peaks")

exportMethods(
	"preplot",
	"plot")

export(
	"mem",
	"profmem")

useDynLib("matter", .registration=TRUE, .fixes="C_")
